from django import forms
from django.core.exceptions import ValidationError
from django.utils import timezone

from .models import UserProfile

from datetime import datetime

# Assistance from CI - Boutique Ado walkthrough
class UserProfileForm(forms.ModelForm):
    """
    A form for the user to make a booking
    """
    class Meta:
        model = UserProfile
        exclude = ('user',)

    def __init__(self, *args, **kwargs):
        """
        Add placeholders and classes, remove
        autogenerated labels and set focus on
        first field
        """
        super().__init__(*args, **kwargs)
        placeholders = {
            'default_mobile_number': 'Mobile Number',
            'default_date_of_birth': 'Date of Birth',
        }

        # Set auto foucs to the first name input
        self.fields['default_mobile_number'].widget.attrs['autofocus'] = True

        # Iterate through form fields to manipulate as required
        for field in self.fields:
            # Add '*' to required fields in the model
            if self.fields[field].required:
                placeholder = f'{placeholders[field]} *'
            else:
                placeholder = placeholders[field]

            # Assign the placeholder
            self.fields[field].widget.attrs['placeholder'] = placeholder

            # Assign a style class
            self.fields[field].widget.attrs['class'] = 'rounded-2'

            # Remove the default labels
            self.fields[field].label = False
    
    def clean_date_of_birth(self):
        """
        A method to ensure the date of birth entered
        is 18 years ago or more
        """
        # Assistance from ChatGPT
        date_of_birth_str = self.cleaned_data['default_date_of_birth']

        if isinstance(date_of_birth_str, str):
            # Parse the string into a datetime object
            date_of_birth = datetime.strptime(date_of_birth_str, '%Y-%m-%d').date()
        else:
            date_of_birth = date_of_birth_str
            
        today = timezone.now().date()
        age = (today.year - date_of_birth.year - (
                (today.month, today.day) < (date_of_birth.month, date_of_birth.day)))
    
        if age < 18:
            raise ValidationError('Applicants must be at least 18 years old')
        
        return date_of_birth
